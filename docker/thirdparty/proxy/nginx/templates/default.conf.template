server {
	listen 80 default_server;
	listen [::]:80 default_server;
	server_name localhost;
	return 301 https://$host$request_uri;
}

server {
    listen              ${EXPOSE_PORT_HTTPS} ssl default_server;
    ssl_certificate     /run/secrets/ssl_cert;
    ssl_certificate_key /run/secrets/ssl_key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    server_name         ${NGINX_HOSTNAME};

    proxy_cache_bypass $http_upgrade;
    proxy_set_header Upgrade           $http_upgrade;
    proxy_set_header Connection        "upgrade";
    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host  $host;
    proxy_set_header X-Forwarded-Port  $server_port;

    expires           0;
    add_header        Cache-Control private;

    large_client_header_buffers 4 64k;

    resolver 127.0.0.11;
    set $session_name nginx_session;

    location / {
      resolver 127.0.0.11 ipv6=off valid=10s;
      set $frontend_host ${FRONTEND_HOST};
      set $frontend_port 3000;
      proxy_pass      http://$frontend_host:$frontend_port$request_uri;
    }

    location /auth {
      resolver 127.0.0.11 valid=10s;
      set $auth_host ${AUTH_HOST};
      set $auth_port 8080;
      proxy_pass      http://$auth_host:$auth_port$request_uri;
    }

    location /api {
      resolver 127.0.0.11 ipv6=off valid=10s;
      set $backend_host ${BACKEND_HOST};
      set $backend_port 9080;
      proxy_pass      http://$backend_host:$backend_port$request_uri;
    }
}
